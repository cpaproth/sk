// generated by Fast Light User Interface Designer (fluid) version 2.1000

#ifndef ui_h
#define ui_h
#include <fltk/Window.h>
#include <map>
#include <string>
#include <boost/function/function0.hpp>
#include <fltk/run.h>
#include "GlImage.h"
#include "GlTable.h"
#include <fltk/TabGroup.h>
#include <fltk/Group.h>
#include <fltk/Output.h>
#include <fltk/Button.h>
#include <fltk/CheckButton.h>
#include <fltk/TextDisplay.h>

namespace SK  {

class UILock  {
public:
	UILock();
	~UILock();
};

class UserInterface  {
public:
	std::map<std::string, boost::function<void(void)> > f;
	UserInterface();
private:
	fltk::Window *mainwnd;
	inline void cb_mainwnd_i(fltk::Window*, void*);
	static void cb_mainwnd(fltk::Window*, void*);
public:
				GlTable *table;
				GlImage *leftimage;
				GlImage *rightimage;
				GlImage *midimage;
				fltk::Output *info;
private:
				inline void cb_Restart_i(fltk::Button*, void*);
				static void cb_Restart(fltk::Button*, void*);
				inline void cb_Mikrofon_i(fltk::CheckButton*, void*);
				static void cb_Mikrofon(fltk::CheckButton*, void*);
public:
				fltk::TextDisplay *log;
	~UserInterface();
};
}
#endif
